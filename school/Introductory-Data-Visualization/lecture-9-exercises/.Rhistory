### Lecutre 9: APIs ###
# Quick google maps example --------------------------
# install.packages('ggmap')
library(ggmap)
qmap('Seattle')
# Simple Spotify API example --------------------------
# Base URL of API
base <- 'https://api.spotify.com/v1/search?'
# Parameters
search <- 'q=adele'
type <- '&type=artist'
# Query string
query_url <- paste0(base, search, type)
# Read in data
library(jsonlite)
data <- fromJSON(query_url)
# Flattening data.frames ----------------
# Let's do something silly
people <- data.frame(names = c('Spencer', 'Jessica', 'Keagan'))
favorites <- data.frame(
food = c('Pizza', 'Pasta', 'salad'),
music = c('Bluegrass', 'Indie', 'Electronic')
)
people$favorites <- favorites
# Columns of our people data.frame
names(people)
# Flatten it!
flattened <- flatten(people)
names(flattened)
cars
?cars
mtcars
?mtcars
library(dplyr)
library(dplyr)
add_rownames(mtcars, rowname='car' )
add_rownames(mtcars, var='car')
mtcars
ret <- car %>%
filter(gear == gears, cyl == cylinders) %>%
filter(mgp == max(mpg)) %>%
select(car)
ret <- cars %>%
filter(gear == gears, cyl == cylinders) %>%
filter(mgp == max(mpg)) %>%
select(car)
car
cars
# We'll be using the mtcars dataset -- confirm that it's loaded
car <- add_rownames(mtcars, var='car')
ret <- car %>%
filter(gear == gears, cyl == cylinders) %>%
filter(mgp == max(mpg)) %>%
select(car)
gears <- 4
cylinders <- 2
ret <- car %>%
filter(gear == gears, cyl == cylinders) %>%
filter(mgp == max(mpg)) %>%
select(car)
ret
car
gears <- 6
cylindrs <- 4
ret <- car %>%
filter(gear == gears, cyl == cylinders) %>%
filter(mgp == max(mpg)) %>%
select(car)
ret
car %>%
filter(gear == gears, cyl == cylinders)
gears
cylinders
cylindrs <- 6
car %>%
filter(gear == gears, cyl == cylinders)
car
gears
gears <- 4
cylinders <- 6
car %>%
filter(gear == gears, cyl == cylinders)
car %>%
filter(gear == gears, cyl == cylinders) %>%
filter(mgp == max(mpg)) %>%
car %>%
filter(gear == gears, cyl == cylinders) %>%
filter(mgp == max(mpg)) %>%
select(car)
car %>%
filter(gear == gears, cyl == cylinders) %>%
filter(mpg== max(mpg)) %>%
select(car)
best_gears_cyl <- function(gears, cylinders) {
ret <- car %>%
filter(gear == gears, cyl == cylinders) %>%
filter(mpg== max(mpg)) %>%
select(car)
return ()
}
# Get the best mpg car for 6 cylinder cars with 4 gears
best_gears_cyl(4, 6)
best_gears_cyl <- function(gears, cylinders) {
ret <- car %>%
filter(gear == gears, cyl == cylinders) %>%
filter(mpg== max(mpg)) %>%
select(car)
return (ret)
}
# Get the best mpg car for 6 cylinder cars with 4 gears
best_gears_cyl(4, 6)
best_gears_cyl(6, 4)
cars
cars <- add_rownames(mtcars, var='car')
car
vehicle <- add_rownames(mtcars, var='car')
best_gears_cyl <- function(gears, cylinders) {
ret <- vehicles %>%
filter(gear == gears, cyl == cylinders) %>%
filter(mgp == max(mpg)) %>%
select(car)
return (ret)
}
# Get the best mpg car for 6 cylinder cars with 4 gears
best_gears_cyl(6, 4)
best_gears_cyl <- function(gears, cylinders) {
ret <- vehicles %>%
filter(gear == gears, cyl == cylinders) %>%
filter(mgp == max(mpg)) %>%
select(car)
return (ret)
}
# Get the best mpg car for 6 cylinder cars with 4 gears
best_gears_cyl(6, 4)
vehicles <- vehicle
vehicles %>%
filter(gear == gears, cyl == cylinders)
gears <- 6
cylinders <- 4
source('~/Documents/INFO-498F/lecture-9-exercises/exercise1.R', echo=TRUE)
vehicles %>%
filter(gear == gears, cyl == cylinders)
gears <- 4
cylinders <- 6
vehicles %>%
filter(gear == gears, cyl == cylinders) %>%
filter(mgp == max(mpg))
best_gears_cyl <- function(gears, cylinders) {
ret <- vehicles %>%
filter(gear == gears, cyl == cylinders) %>%
filter(mgp == max(mpg)) %>%
select(car)
}
best_gears_cyl(6, 4)
