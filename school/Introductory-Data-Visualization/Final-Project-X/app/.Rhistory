num_repos <- nrow(repo_df)
most_popular <- repo_df %>%
select(forks_count) %>%
filter(forks_count == max(forks_count))
repo_df <- mutate(repo_df, date = format(as.Date(created_at), format="%B %d %Y"))
small_repo_df <- select(repo_df, name, description, forks_count, owner.login, date)
names(small_repo_df) <- c("Name", "Description", "Number of Forks", "Owner ID", "Date Created")
# display the table
data_table <- kable(small_repo_df, format = "markdown")
summary_data <- repo_df %>%
group_by(language) %>%
summarise(
lang_repos = n(),
avg_forks = mean(forks_count)
)
names(summary_data) <- c("Language", "Number of repositories", "Average number of forks")
summary_table <- kable(summary_data, format = "markdown")
repo_df$owner.avatar_url
repo_df$owner.avatar_url[1]
repo_data$owner$avatar_url
library(shiny)
iris
iris
df <- iris
View(df)
library(dplyr)
library(plotly)
avgs <- df %>%
group_by(Species) %>%
summarise(
avg_sepal_length = mean(Sepal.Length),
avg_sepal_width = mean(Sepal.Width),
avg_petal_length = mean(Petal.Length),
avg_petal_width = mean(Petal.Width)
)
View(avgs)
iris
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
df <- iris
spec <- input$species
spec <- input$species
xaxis <- eval(parse(text = input$dim1))
yaxis <- eval(parse(text = input$dim2))
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
plot_ly(df, x = df$Sepal.Length, y = df$Sepal.Width, mode = "markers")
layout(p, xaxis = list(title = "Date"), yaxis = list(title = "Casualties"))
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
xlabel <- sub(".", "\\s", "Sepal.Length")
xlabel <- sub(".", " ", "Sepal.Length")
xlabel <- sub("\\.", " ", "Sepal.Length")
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
layout(title = '2015 US city mass shootings', geo = g)
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
temp <- filter(df, Species == "setosa")
View(temp)
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
temp <- filter(df, Species == "setosa")
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/a8-building-applications')
library(rsconnect)
rsconnect::deployApp('/Users/Potato/Documents/info498/a8-building-applications')
rsconnect::deployApp('/Users/Potato/Documents/info498/a8-building-applications')
rsconnect::deployApp('/Users/Potato/Documents/info498/a8-building-applications')
rsconnect::deployApp('/Users/Potato/Documents/info498/a8-building-applications')
rsconnect::deployApp('/Users/Potato/Documents/info498/a8-building-applications')
rsconnect::deployApp('/Users/Potato/Documents/info498/a8-building-applications')
shiny::runApp('Documents/info498/Final-Project-X/shiny-app')
shiny::runApp('Documents/info498/Final-Project-X/shiny-app')
shiny::runApp('Documents/info498/test')
source('scripts/build_map.r')
build_map <- function(df) {
m <- list(
colorbar = list(title = "Admission Rate"),
size = 5, opacity = 0.8, symbol = 'circle')
df$hover <- paste(df$INSTNM, "has", df$ADM_RATE, "percent of admission rate",
'<br>', "Location:",df$CITY, df$ZIP)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 1,
subunitwidth = 1)
p <- plot_ly(df, lat = LATITUDE, lon = LONGITUDE, text = hover, color = ADM_RATE,
type = 'scattergeo', locationmode = 'USA-states', mode = "markers", marker = m)
layout(p, title = "US College Cards", geo = g) %>%
return()
}
build_map <- function(df) {
m <- list(
colorbar = list(title = "Admission Rate"),
size = 5, opacity = 0.8, symbol = 'circle')
df$hover <- paste(df$INSTNM, "has", df$ADM_RATE, "percent of admission rate",
'<br>', "Location:",df$CITY, df$ZIP)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 1,
subunitwidth = 1)
p <- plot_ly(df, lat = LATITUDE, lon = LONGITUDE, text = hover, color = ADM_RATE,
type = 'scattergeo', locationmode = 'USA-states', mode = "markers", marker = m)
layout(p, title = "US College Cards", geo = g)
}
shiny::runApp('Documents/info498/test')
build_map <- function(df) {
m <- list(
colorbar = list(title = "Admission Rate"),
size = 5, opacity = 0.8, symbol = 'circle')
df$hover <- paste(df$INSTNM, "has", df$ADM_RATE, "percent of admission rate",
'<br>', "Location:",df$CITY, df$ZIP)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 1,
subunitwidth = 1)
p <- plot_ly(df, lat = LATITUDE, lon = LONGITUDE, text = hover, color = ADM_RATE,
type = 'scattergeo', locationmode = 'USA-states', mode = "markers", marker = m)
layout(p, title = "US College Cards", geo = g) %>%
return()
}
shiny::runApp('Documents/info498/test')
library(plotly)
shiny::runApp('Documents/info498/test')
shiny::runApp('Documents/info498/test')
shiny::runApp('Documents/info498/Final-Project-X/shiny-app')
build_map<- function(add, lower_SAT, upper_SAT){
#state_fun<- add%>%
#          filter(STABBR == states)
final_data<- add %>%
filter( upper_SAT >= SAT_AVG) %>%
filter( lower_SAT <= SAT_AVG) %>%
select(INSTNM, LATITUDE, LONGITUDE, ADM_RATE, hover)
m <- list(
colorbar = list(title = "Admission Rate"),
size = 5, opacity = 0.5, symbol = 'circle')
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 0.5,
subunitwidth = 0.5)
plot_ly(
final_data,
lat = LATITUDE,
lon = LONGITUDE,
text = hover,
colors = cols,
color = ADM_RATE * 100,
opacity = 0.5, na.rm = TRUE,
type = 'scattergeo',
locationmode = 'USA-states',
size = ADM_RATE,
mode = "markers",
marker = m) %>%
layout(title = "US College Cards", geo = g)
}
shiny::runApp('Documents/info498/Final-Project-X/shiny-app')
build_map <- function(df) {
m <- list(
colorbar = list(title = "Admission Rate"),
size = 5, opacity = 0.8, symbol = 'circle')
df$hover <- paste(df$INSTNM, "has", df$ADM_RATE, "percent of admission rate",
'<br>', "Location:",df$CITY, df$ZIP)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 1,
subunitwidth = 1)
p <- plot_ly(df, lat = LATITUDE, lon = LONGITUDE, text = hover, color = ADM_RATE,
type = 'scattergeo', locationmode = 'USA-states', mode = "markers", marker = m)
layout(p, title = "US College Cards", geo = g) %>%
return()
}
p <- plot_ly(df, lat = LATITUDE, lon = LONGITUDE, text = hover, color = ADM_RATE,
type = 'scattergeo', locationmode = 'USA-states', mode = "markers", marker = m)
setwd("/Users/Potato/Documents/info498/Final-Project-X/shiny-app")
df<- read.csv("data/Summarized data.csv")
m <- list(
colorbar = list(title = "Admission Rate"),
size = 5, opacity = 0.8, symbol = 'circle')
df$hover <- paste(df$INSTNM, "has", df$ADM_RATE, "percent of admission rate",
'<br>', "Location:",df$CITY, df$ZIP)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 1,
subunitwidth = 1)
p <- plot_ly(df, lat = LATITUDE, lon = LONGITUDE, text = hover, color = ADM_RATE,
type = 'scattergeo', locationmode = 'USA-states', mode = "markers", marker = m)
layout(p, title = "US College Cards", geo = g)
shiny::runApp('~/Documents/info498/test')
build_map(df)
shiny::runApp()
layout(p, title = "US College Cards", geo = g)
layout(p, title = "US College Cards", geo = g)
shiny::runApp()
shiny::runApp()
build_map<- function(add, lower_SAT, upper_SAT){
#state_fun<- add%>%
#          filter(STABBR == states)
final_data<- add %>%
filter( upper_SAT >= SAT_AVG) %>%
filter( lower_SAT <= SAT_AVG) %>%
select(INSTNM, LATITUDE, LONGITUDE, ADM_RATE, hover)
m <- list(
colorbar = list(title = "Admission Rate"),
size = 5, opacity = 0.5, symbol = 'circle')
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 0.5,
subunitwidth = 0.5)
plot_ly(
final_data,
lat = LATITUDE,
lon = LONGITUDE,
text = hover,
colors = cols,
color = ADM_RATE * 100,
opacity = 0.5, na.rm = TRUE,
type = 'scattergeo',
locationmode = 'USA-states',
size = ADM_RATE,
mode = "markers",
marker = m) %>%
layout(title = "US College Cards", geo = g)
}
build_map(df, 600, 1500)
View(df)
newdata$ADM_RATE <- as.numeric(as.character(newdata$ADM_RATE))
newdata$SAT_AVG<- as.numeric(as.character(newdata$SAT_AVG))
newdata<- read.csv("Summarized data.csv")
newdata <- df
View(df)
newdata$ADM_RATE <- as.numeric(as.character(newdata$ADM_RATE))
newdata$SAT_AVG<- as.numeric(as.character(newdata$SAT_AVG))
View(newdata)
build_map(df, 600, 1500)
build_map(newdata, 600, 1500)
build_map <- function(df) {
m <- list(
colorbar = list(title = "Admission Rate"),
size = 5, opacity = 0.8, symbol = 'circle')
df$hover <- paste(df$INSTNM, "has", df$ADM_RATE, "percent of admission rate",
'<br>', "Location:",df$CITY, df$ZIP)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 1,
subunitwidth = 1)
p <- plot_ly(df, lat = LATITUDE, lon = LONGITUDE, text = hover, color = ADM_RATE,
type = 'scattergeo', locationmode = 'USA-states', mode = "markers", marker = m)
layout(p, title = "US College Cards", geo = g) %>%
return()
}
build_map(df)
build_map(df)
shiny::runApp('~/Documents/info498/test')
shiny::runApp()
shiny::runApp()
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
library(rsconnect)
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
newdata$ADM_RATE <- as.numeric(as.character(newdata$ADM_RATE))
newdata$SAT_AVG <- as.numeric(as.character(newdata$SAT_AVG))
newdata$COSTT4_A <- as.numeric(as.character(newdata$COSTT4_A))
Ave_rate <- mean(newdata$ADM_RATE, na.rm = TRUE) %>%
round(digit = 3)
Ave_cost <- mean(newdata$COSTT4_A, na.rm = TRUE) %>%
round(digit = 2)
Ave_sat <- mean(newdata$SAT_AVG, na.rm = TRUE) %>%
round(digit = 0)
data_by_state <-  newdata %>%
group_by(STABBR) %>%
summarise("Average SAT Score" = mean(SAT_AVG, na.rm = TRUE) %>% round(digit = 0),
"Average Cost of Attendance" = mean(COSTT4_A, na.rm = TRUE) %>% round(digit = 2),
"Average Acceptance Rate" = paste0(mean(ADM_RATE, na.rm = TRUE) %>% round(digit = 3) * 100, '%')) %>%
na.omit()
View(data_by_state)
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
View(df)
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
lower_SAT <- 500
upper_SAT <- 1000
add <- df
final_data<- add %>%
filter( upper_SAT >= SAT_AVG) %>%
filter( lower_SAT <= SAT_AVG) %>%
select(INSTNM, LATITUDE, LONGITUDE, ADM_RATE, hover)
m <- list(
colorbar = list(title = "Admission Rate"),
size = 5, opacity = 0.5, symbol = 'circle')
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 0.5,
subunitwidth = 0.5)
plot_ly(
final_data,
lat = LATITUDE,
lon = LONGITUDE,
text = hover,
colors = cols,
color = ADM_RATE * 100,
opacity = 0.5, na.rm = TRUE,
type = 'scattergeo',
locationmode = 'USA-states',
size = ADM_RATE,
mode = "markers",
marker = m)
View(final_data)
plot_ly(
final_data,
lat = LATITUDE,
lon = LONGITUDE,
text = hover,
# colors = cols,
color = ADM_RATE * 100,
opacity = 0.5, na.rm = TRUE,
type = 'scattergeo',
locationmode = 'USA-states',
size = ADM_RATE,
mode = "markers",
marker = m)
plot_ly(
final_data,
lat = LATITUDE,
lon = LONGITUDE,
text = hover,
# colors = cols,
color = ADM_RATE * 100,
opacity = 0.5, na.rm = TRUE,
type = 'scattergeo',
locationmode = 'USA-states',
size = ADM_RATE,
mode = "markers",
marker = m) %>%
layout(title = "US College Cards", geo = g)
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
data_by_state <-  newdata %>%
group_by(STABBR) %>%
summarise("State" = STABBR,
"Average SAT Score" = mean(SAT_AVG, na.rm = TRUE) %>% round(digit = 0),
"Average Cost of Attendance" = mean(COSTT4_A, na.rm = TRUE) %>% round(digit = 2),
"Average Acceptance Rate" = paste0(mean(ADM_RATE, na.rm = TRUE) %>% round(digit = 3) * 100, '%')) %>%
na.omit()
data_by_state <-  newdata %>%
group_by(STABBR) %>%
summarise("State" = STABBR,
"Average SAT Score" = mean(SAT_AVG, na.rm = TRUE) %>% round(digit = 0),
"Average Cost of Attendance" = mean(COSTT4_A, na.rm = TRUE) %>% round(digit = 2),
"Average Acceptance Rate" = paste0(mean(ADM_RATE, na.rm = TRUE) %>% round(digit = 3) * 100, '%')) %>%
na.omit()
View(data_by_state)
data_by_state <-  newdata %>%
group_by(STABBR) %>%
summarise("Average SAT Score" = mean(SAT_AVG, na.rm = TRUE) %>% round(digit = 0),
"Average Cost of Attendance" = mean(COSTT4_A, na.rm = TRUE) %>% round(digit = 2),
"Average Acceptance Rate" = paste0(mean(ADM_RATE, na.rm = TRUE) %>% round(digit = 3) * 100, '%')) %>%
na.omit()
names <- c("State", "Average SAT Score", "Average Cost of Attendance", "Average Acceptance Rate")
data_by_state <-  newdata %>%
group_by(STABBR) %>%
summarise(avg_SAT = mean(SAT_AVG, na.rm = TRUE) %>% round(digit = 0),
avg_att = mean(COSTT4_A, na.rm = TRUE) %>% round(digit = 2),
avg_acc = paste0(mean(ADM_RATE, na.rm = TRUE) %>% round(digit = 3) * 100, '%')) %>%
na.omit()
View(data_by_state)
names(data_by_state) <- names
View(data_by_state)
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/a8-building-applications')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
df<- read.csv("data/Summarized data.csv")
dataFrame <- df
# Generate vectors detailing the columns that should be selected from the data set
nameIndex = which(colnames(dataFrame) == "INSTNM")
rateIndex = which(colnames(dataFrame) == "ADM_RATE")
titleText = "test"
testData = which(colnames(dataFrame) == target)
shiny::runApp('~/Documents/info498/a8-building-applications')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
shiny::runApp('~/Documents/info498/Final-Project-X/app')
source("scripts/map2.R")
setwd("/Users/Potato/Documents/info498/Final-Project-X/app")
source("scripts/map2.R")
View(df)
shiny::runApp()
shiny::runApp()
shiny::runApp()
